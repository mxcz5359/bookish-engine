# 注意规则在满足自己需求情况下，尽量做到精简，不要过度复杂，以免影响性能。
# 机场订阅
proxy-providers:
  Mitce:
    url: "https://app.mitce.com"
    type: http
    interval: 86400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 240
    proxy: 直连
    header:
      User-Agent:
      - "Clash"
      - "mihomo"
      - "Clash.meta"
    override:
      udp: turn
  Hongxing:
    url: "https://app.mitce.com"
    type: http
    interval: 86400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 240
    proxy: 直连
    header:
      User-Agent:
      - "Clash"
      - "mihomo"
      - "Clash.meta"
    override:
      udp: turn

# 节点信息
proxies:
  - {name: 直连, type: direct, udp: true}

# 全局配置 
port: 7890
socks-port: 7891
redir-port: 7892
mixed-port: 7893
tproxy-port: 7894
allow-lan: true
bind-address: "*"
ipv6: true
unified-delay: true
tcp-concurrent: true
log-level: warning
find-process-mode: 'off'
# interface-name: en0
global-client-fingerprint: chrome
keep-alive-idle: 600
keep-alive-interval: 15
disable-keep-alive: false
profile:
  store-selected: true
  store-fake-ip: true

# 控制面板
external-controller: 0.0.0.0:5359
secret: "5359"
external-ui: "/etc/op/run/ui"
external-ui-name: zashboard
external-ui-url: "https://github.com/Zephyruso/zashboard/archive/refs/heads/gh-pages.zip"

# 嗅探
sniffer:
  enable: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  force-domain:
    - "+.v2ex.com"
  skip-domain:
    - "rule-set:private_domain,cn_domain"
    - "dlg.io.mi.com"
    - "+.push.apple.com"
    - "+.apple.com"
    - "+.wechat.com"
    - "+.qpic.cn"
    - "+.qq.com"
    - "+.wechatapp.com"
    - "+.vivox.com"
    - "+.oray.com"
    - "+.sunlogin.net"
    - "+.msftconnecttest.com"
    - "+.msftncsi.com"

# 入站  
tun:
  enable: true
  # system/gvisor/mixed
  stack: gvisor
  dns-hijack: ["any:53", "tcp://any:53"]
  auto-route: true
  auto-redirect: true
  auto-detect-interface: true

# DNS模块
dns:
  enable: true
  listen: 0.0.0.0:7874
  ipv6: true
  respect-rules: true
  enhanced-mode: fake-ip
  fake-ip-range: 28.0.0.1/8
  fake-ip-filter-mode: blacklist
  fake-ip-filter:
    - "rule-set:private_domain,cn_domain"
    - "+.services.googleapis.cn"
    - "+.xn--ngstr-lra8j.com"
    - "time.*.com"
    - "+.pool.ntp.org"
    - "+.ntp.tencent.com"
    - "+.ntp1.aliyun.com"
    - "+.ntp.ntsc.ac.cn"
    - "+.cn.ntp.org.cn"
  default-nameserver:
    - 223.5.5.5
  proxy-server-nameserver:
    - https://dns.alidns.com/dns-query
  # namesever尽量用运营商提供的DNS
  nameserver:
    - 202.102.152.3
    - 202.102.154.3
    - 223.5.5.5

# 出站策略
# 锚点
pr: &pr {type: select, proxies: [香港, 台湾, 日本, 新加坡, 美国, 直连, 🐬 选择代理,直连]}
# 策略组
proxy-groups:
  - {name: ⚛ AI, <<: *pr}
  - {name: 🕊️ GitHub, <<: *pr}
  - {name: 👻 TikTok, <<: *pr}
  - {name: 🐧 Telegram, <<: *pr}
  - {name: 🌿 流媒体, <<: *pr}
  - {name: 🕸️ Google, <<: *pr}
  - {name: ❄️ YouTube, <<: *pr}
  - {name: 💦 Disney, <<: *pr}
  - {name: ☃️ Netflix, <<: *pr}
  - {name: 🐾 国外, <<: *pr}
  - {name: 🐬 检测, <<: *pr}
  - {name: 🎯 直连, type: select, proxies: [直连]}
  - {name: 香港, type: url-test, include-all: true, filter: "(广港|香港|HK|Hong Kong|🇭🇰|HongKong)", url: 'http://www.gstatic.com/generate_204', interval: 60, tolerance: 150}
  - {name: 台湾, type: url-test, include-all: true, filter: "(广台|台湾|台灣|TW|Tai Wan|🇹🇼|🇨🇳|TaiWan|Taiwan)", url: 'http://www.gstatic.com/generate_204', interval: 60, tolerance: 150}
  - {name: 日本, type: url-test, include-all: true, filter: "(广日|日本|JP|川日|东京|大阪|泉日|埼玉|沪日|深日|🇯🇵|Japan)", url: 'http://www.gstatic.com/generate_204', interval: 60, tolerance: 150}
  - {name: 新加坡, type: url-test, include-all: true, filter: "(广新|新加坡|SG|坡|狮城|🇸🇬|Singapore)", url: 'http://www.gstatic.com/generate_204', interval: 60, tolerance: 150}
  - {name: 美国, type: url-test, include-all: true, filter: "(广美|美|US|纽约|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|🇺🇸|United States)", url: 'http://www.gstatic.com/generate_204', interval: 60, tolerance: 150}
# 规则匹配
rules:
  - RULE-SET,private_domain,直连
  - RULE-SET,proxylite,🐾 国外
  - RULE-SET,ai,⚛ AI
  - RULE-SET,github_domain,🕊️ GitHub
  - RULE-SET,hbo_domain,🌿 流媒体
  - RULE-SET,spotify_domain,🌿 流媒体
  - RULE-SET,youtube_domain,❄️ YouTube
  - RULE-SET,google_domain,🕸️ Google
  - RULE-SET,tiktok_domain,👻 TikTok
  - RULE-SET,speedtest_domain,🐬 检测
  - RULE-SET,telegram_domain,🐧 Telegram
  - RULE-SET,netflix_domain,☃️ Netflix
  - RULE-SET,disney_domain,💦Disney
  - RULE-SET,gfw_domain,🐾 国外
  - RULE-SET,gwall_domain,🐾 国外
  - RULE-SET,geolocation-!cn,🐾 国外
  - RULE-SET,cn_domain,🎯 直连
  - RULE-SET,google_ip,🕸️ Google,no-resolve
  - RULE-SET,netflix_ip,☃️ Netflix,no-resolve
  - RULE-SET,telegram_ip, 🐧 Telegram,no-resolve
  - RULE-SET,cn_ip,🎯 直连
# 规则集
rule-anchor:
  ip: &ip {type: http, interval: 86400, behavior: ipcidr, format: mrs}
  domain: &domain {type: http, interval: 86400, behavior: domain, format: mrs}
  class: &class {type: http, interval: 86400, behavior: classical, format: text}
rule-providers:
  ai: { <<: *class, url: "https://raw.githubusercontent.com/mxcz5359/bookish-engine/refs/heads/main/ai.list"}
  github_domain: { <<: *class, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/GitHub/GitHub.list"}
  tiktok_domain: { <<: *class, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/TikTok/TikTok.list"}
  telegram_domain: { <<: *class, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Telegram/Telegram.list"}
  spotify_domain: { <<: *class, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Spotify/Spotify.list"} # Renamed for clarity
  hbo_domain": { <<: *class, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/HBO/HBO.list"} # Renamed for clarity
  google_domain: { <<: *class, url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/refs/heads/master/Clash/Ruleset/Google.list"}
  youtube_domain: { <<: *class, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/YouTube/YouTube.list"}
  disney_domain: { <<: *class, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Disney/Disney.list"}
  netflix_domain: { <<: *class, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Netflix/Netflix.list"}
  gfw_domain: { <<: *class, url: "https://raw.githubusercontent.com/liandu2024/clash/refs/heads/main/Proxy.list"} # Renamed for clarity
  gwall_domain: { <<: *class, url: "https://raw.githubusercontent.com/mxcz5359/bookish-engine/refs/heads/main/all.list"} # Renamed for clarity
  geolocation-!cn: { <<: *class, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Global/Global.list"} # Renamed for clarity
  speedtest_domain: { <<: *class, url: "https://raw.githubusercontent.com/liandu2024/clash/refs/heads/main/list/Check.list"}
  cn_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.mrs"}
  google_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/google.mrs"}
  telegram_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/telegram.mrs"}
  netflix_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/netflix.mrs"}
  cn_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.mrs"}
